{"version":3,"sources":["js/images-servise.js","index.js"],"names":["ImagesApiService","constructor","searchQuery","page","fetchImages","console","log","fetch","then","response","json","data","query","newQuery","refs","searchForm","document","querySelector","gallery","btnLoadMore","imagesApiService","onSearch","event","preventDefault","currentTarget","elements","value","onLoadMore","addEventListener"],"mappings":";;;AAAsC,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EAAvB,MAAMA,EACnBC,cACOC,KAAAA,YAAc,GACdC,KAAAA,KAAO,EAGdC,cACEC,QAAQC,IAAI,MAGLC,OAAAA,2EACmB,KAAKL,yGAAyG,KAAKC,QAE1IK,KAAKC,GAAYA,EAASC,QAC1BF,KAAKG,IACCR,KAAAA,MAAQ,IAIfS,YACK,OAAA,KAAKV,YAGVU,UAAMC,GACHX,KAAAA,YAAcW,GAxBe,QAAA,QAAA;;ACuDtC,aAvDA,QAAA,oBACA,IAAA,EAAA,EAAA,QAAA,wBAsDA,SAAA,EAAA,GAAA,OAAA,GAAA,EAAA,WAAA,EAAA,CAAA,QAAA,GApDA,MAAMC,EAAO,CACXC,WAAYC,SAASC,cAAc,gBACnCC,QAASF,SAASC,cAAc,YAChCE,YAAaH,SAASC,cAAc,eAEhCG,EAAmB,IAAIpB,EAAJ,QAQzB,SAASqB,EAASC,GAChBA,EAAMC,iBACNH,EAAiBR,MAAQU,EAAME,cAAcC,SAASvB,YAAYwB,MAElErB,QAAQC,IAAIc,EAAiBR,OAC7BQ,EAAiBhB,cAGnB,SAASuB,IACPP,EAAiBhB,cAZnBU,EAAKC,WAAWa,iBAAiB,SAAUP,GAC3CP,EAAKK,YAAYS,iBAAiB,QAASD","file":"src.da3e052e.js","sourceRoot":"../src","sourcesContent":["export default class ImagesApiService {\n  constructor() {\n    this.searchQuery = '';\n    this.page = 1;\n  }\n\n  fetchImages() {\n    console.log(this);\n    const url = `https://pixabay.com/api`;\n    const key = `24121745-05691669c6e1f2eaf3f0511ee`;\n    return fetch(\n      `${url}/?key=${key}&q=${this.searchQuery}&image_type=photo&image_type=photo&orientation=horizontal&safesearch=true&per_page=40&page=${this.page}`,\n    )\n      .then(response => response.json())\n      .then(data => {\n        this.page += 1;\n      });\n  }\n\n  get query() {\n    return this.searchQuery;\n  }\n\n  set query(newQuery) {\n    this.searchQuery = newQuery;\n  }\n}\n","import './css/styles.css';\nimport ImagesApiService from './js/images-servise';\n\nconst refs = {\n  searchForm: document.querySelector('.search-form'),\n  gallery: document.querySelector('.gallery'),\n  btnLoadMore: document.querySelector('.load-more'),\n};\nconst imagesApiService = new ImagesApiService();\n// console.log(refs.searchForm);\n// console.log(refs.gallery);\n// console.log(refs.btnLoadMpre);\n\nrefs.searchForm.addEventListener('submit', onSearch);\nrefs.btnLoadMore.addEventListener('click', onLoadMore);\n\nfunction onSearch(event) {\n  event.preventDefault();\n  imagesApiService.query = event.currentTarget.elements.searchQuery.value;\n\n  console.log(imagesApiService.query);\n  imagesApiService.fetchImages();\n}\n\nfunction onLoadMore() {\n  imagesApiService.fetchImages();\n}\n\n// Каждое изображение описывается объектом, из которого тебе интересны только следующие свойства:\n\n// webformatURL - ссылка на маленькое изображение для списка карточек.\n// largeImageURL - ссылка на большое изображение.\n// tags - строка с описанием изображения. Подойдет для атрибута alt.\n// likes - количество лайков.\n// views - количество просмотров.\n// comments - количество комментариев.\n// downloads - количество загрузок.\n\n// Шаблон разметки карточки одного изображения для галереи.\n// <div class=\"photo-card\">\n//   <img src=\"\" alt=\"\" loading=\"lazy\" />\n//   <div class=\"info\">\n//     <p class=\"info-item\">\n//       <b>Likes</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Views</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Comments</b>\n//     </p>\n//     <p class=\"info-item\">\n//       <b>Downloads</b>\n//     </p>\n//   </div>\n// </div>\n"]}